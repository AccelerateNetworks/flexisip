#!/bin/bash

[ ! -f launch.config.perso ] && echo "launch.config.perso not found" && exit 1

FLEXISIP=${FLEXISIP:=/opt/belledonne-communications/bin/flexisip}
SIPP=${SIPP:=sipp}
NB_USERS=${NB_USERS:=1000}
EXPIRE=${EXPIRE:=3600}
IP=${IP:=127.0.0.1}
DOMAIN=${DOMAIN:=localhost}
FLEXISIP_PORT=${FLEXISIP_PORT:=50060}
PROXY=${PROXY:=localhost}
REGISTER_PORT=${REGISTER_PORT:=5070}
USERS_PORT=${USERS_PORT:=5063}
INVITER_PORT=${INVITER_PORT:=5064}

UA="Linphone/Linphone-3.3.x_(sipp/unknown)"

# Import configuration
FOLDER=$1
if [ -n "$2" ]
then
 echo -e "\033[1mUsing authentication\033[0m"
 USE_AUTH="-auth"
else
 echo -e "\033[1mNOT using authentication\033[0m"
fi

DOMAIN="localhost"
SDOMAIN="-set domain $DOMAIN"
SEXPIRE="-set expire $EXPIRE"
SUA="-set ua $UA"
PWD="`pwd`"

if [ -z $FOLDER ] 
then
 echo "Usage ./launch folder, where folder is "
 ls */launch.config | sed 's/\/.*$//'
 exit
fi
[ ! -f $FOLDER/launch.config ] && echo "config file not found : "$FOLDER/launch.config"" && exit
FLEX_OPTIONS="$FLEX_OPTIONS -c $FOLDER/flexisip.conf -t sip:*:$FLEXISIP_PORT --hosts localhost=127.0.0.1 --set module::Authentication/datasource=$PWD/passwords"
[ -z "$2" ] && FLEX_OPTIONS="$FLEX_OPTIONS --set module::Authentication/enabled=false"
. $FOLDER/launch.config

SIPP_COMMONS="127.0.0.1:$FLEXISIP_PORT $SIPP_COMMONS -i $IP -trace_err"
REG_OPTIONS="$REG_OPTIONS -p $REGISTER_PORT -m `echo "1+$NB_USERS"|bc` $SIPP_COMMONS -inf authentication.csv $SDOMAIN $SEXPIRE"
REG_INVITER_OPTIONS="$REG_INVITER_OPTIONS -p $INVITER_PORT -m 1 $SIPP_COMMONS -nd $SDOMAIN $SEXPIRE $SUA"
INV_OPTIONS="$INV_OPTIONS -m $NB_USERS -p $INVITER_PORT $SIPP_COMMONS $SDOMAIN $SUA"
UAS_OPTIONS="$UAS_OPTIONS -bg -p $USERS_PORT $SIPP_COMMONS -mi $IP -mp 15000 -rtp_echo"

echo "NB_USERS=$NB_USERS"
echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"

# Accept core dumps
ulimit -c unlimited

# Open many file descriptors
ulimit -n 65000


CMD_UAS="$SIPP -sf uas.xml $UAS_OPTIONS"
echo -e "\n\033[1mStart users listening: \033[0m"
echo $CMD_UAS
$CMD_UAS 2>&1 > uas.log

sleep 2

CMD_FLEXISIP="$FLEXISIP $FLEX_OPTIONS"
echo -e "\n\033[1mStart flexisip: \033[0m"
echo $CMD_FLEXISIP
$CMD_FLEXISIP &> flexisip.log &
sleep 2
ps aux | grep flexisip | grep -v grep
if [ $? -ne 0 ]; then
  echo "Error launching flexisip"
  cat flexisip.log
  exit -1
fi


CMD_REG_USERS="$SIPP $PROXY -sf register_users.xml $REG_OPTIONS -set ua noauth"
echo -e "\n\033[1mRegister users: \033[0m"
echo $CMD_REG_USERS
$CMD_REG_USERS

CMD_REG_INVITER="$SIPP $PROXY -sf register_inviter$USE_AUTH.xml $REG_INVITER_OPTIONS"
echo -e "\n\033[1mRegister inviter \033[0m"
echo $CMD_REG_INVITER
$CMD_REG_INVITER



# Allow killing
function onexit() {
 echo -e "\e[0;31mKilling everyone \033[0m"
 killall flexisip 2>/dev/null
 killall sipp 2>/dev/null

 LOGS=logs/"$FOLDER"_`date '+%s'`
 LOGS_TO_SAVE=$FOLDER"/*.log *.log core"
 mkdir -p $LOGS
 mv $LOGS_TO_SAVE $LOGS

 exit
}
set -o errtrace 
trap onexit 1 2 3 15 ERR

CMD_INVITE_USERS="$SIPP $PROXY -sf $FOLDER/invite$USE_AUTH.xml $INV_OPTIONS"
echo -e "\n\033[1mStart inviting users : \033[0m"
echo $CMD_INVITE_USERS
while [ true ]
do
  $CMD_INVITE_USERS
done

onexit 
