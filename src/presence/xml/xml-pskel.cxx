// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "xml-pskel.hxx"

namespace namespace_
{
  // lang_pskel
  //

  lang_pskel::
  lang_pskel ()
  : lang_impl_ (0)
  {
  }

  lang_pskel::
  lang_pskel (lang_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::simple_content (impl, 0),
    lang_impl_ (impl)
  {
  }

  // space_pskel
  //

  space_pskel::
  space_pskel (::xml_schema::ncname_pskel* tiein)
  : ::xml_schema::ncname_pskel (tiein, 0),
    space_impl_ (0)
  {
    this->_enumeration_facet (_xsde_space_pskel_enums_, 2UL);
  }

  space_pskel::
  space_pskel (space_pskel* impl, void*)
  : ::xml_schema::ncname_pskel (impl, 0),
    space_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_space_pskel_enums_, 2UL);
  }

  // lang_member_pskel
  //

  lang_member_pskel::
  lang_member_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    lang_member_impl_ (0)
  {
    this->_enumeration_facet (_xsde_lang_member_pskel_enums_, 1UL);
  }

  lang_member_pskel::
  lang_member_pskel (lang_member_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    lang_member_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_lang_member_pskel_enums_, 1UL);
  }
}

#include <assert.h>

#include <string.h>
#include <xsde/cxx/parser/substitution-map.hxx>
#include <xsde/cxx/parser/validating/inheritance-map.hxx>

static
const ::xsde::cxx::parser::substitution_map_init
_xsde_substitution_map_init_;

static
const ::xsde::cxx::parser::validating::inheritance_map_init
_xsde_inheritance_map_init_;

namespace namespace_
{
  // lang_pskel
  //

  const char* lang_pskel::
  _static_type ()
  {
    return "lang http://www.w3.org/XML/1998/namespace";
  }

  const char* lang_pskel::
  _dynamic_type () const
  {
    return _static_type ();
  }

  // space_pskel
  //

  const char* space_pskel::
  _static_type ()
  {
    return "space http://www.w3.org/XML/1998/namespace";
  }

  const char* space_pskel::
  _dynamic_type () const
  {
    return _static_type ();
  }

  ::std::string space_pskel::
  post_ncname ()
  {
    assert (this->ncname_impl_);
    return this->ncname_impl_->post_ncname ();
  }

  const char* const space_pskel::_xsde_space_pskel_enums_[2UL] = 
  {
    "default",
    "preserve"
  };

  // lang_member_pskel
  //

  const char* lang_member_pskel::
  _static_type ()
  {
    return "lang_member http://www.w3.org/XML/1998/namespace";
  }

  const char* lang_member_pskel::
  _dynamic_type () const
  {
    return _static_type ();
  }

  ::std::string lang_member_pskel::
  post_string ()
  {
    assert (this->string_impl_);
    return this->string_impl_->post_string ();
  }

  const char* const lang_member_pskel::_xsde_lang_member_pskel_enums_[1UL] = 
  {
    ""
  };
}

#include <assert.h>

namespace namespace_
{
}

namespace namespace_
{
}

namespace namespace_
{
}

// Begin epilogue.
//
//
// End epilogue.

