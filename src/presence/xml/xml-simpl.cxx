// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

// Begin prologue.
//
//
// End prologue.

#include "xml-simpl.hxx"

#include <xsde/cxx/serializer/validating/string-common.hxx>

namespace namespace_
{
  // lang_simpl
  //

  void lang_simpl::
  pre (const ::namespace_::lang& x)
  {
    this->lang_simpl_state_ = &x;
  }

  void lang_simpl::
  _serialize_content ()
  {
    const ::std::string& s = this->lang_simpl_state_->value ();
    this->_characters (s.c_str (), s.size ());
  }

  // space_simpl
  //

  space_simpl::
  space_simpl ()
  : space_sskel (0)
  {
  }

  void space_simpl::
  pre (const ::namespace_::space& x)
  {
    this->space_simpl_state_ = &x;
  }

  void space_simpl::
  _serialize_content ()
  {
    if (::xsde::cxx::serializer::validating::string_common::validate_facets (
          this->space_simpl_state_->string (),
          this->_facets (),
          this->_context ()))
      this->_characters (this->space_simpl_state_->string ());
  }

  // lang_member_simpl
  //

  lang_member_simpl::
  lang_member_simpl ()
  : lang_member_sskel (0)
  {
  }

  void lang_member_simpl::
  pre (const ::namespace_::lang_member& x)
  {
    this->lang_member_simpl_state_ = &x;
  }

  void lang_member_simpl::
  _serialize_content ()
  {
    if (::xsde::cxx::serializer::validating::string_common::validate_facets (
          this->lang_member_simpl_state_->string (),
          this->_facets (),
          this->_context ()))
      this->_characters (this->lang_member_simpl_state_->string ());
  }
}

// Begin epilogue.
//
//
// End epilogue.

