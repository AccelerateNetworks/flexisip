// Copyright (c) 2005-2011 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
//

#ifndef XML_PIMPL_HXX
#define XML_PIMPL_HXX

#include <xsde/cxx/pre.hxx>

// Begin prologue.
//
//
// End prologue.

#ifndef XSDE_OMIT_PAGGR
#  define XSDE_OMIT_PAGGR
#  define XML_PIMPL_HXX_CLEAR_OMIT_PAGGR
#endif

#include "xml-pskel.hxx"

#include <xsde/cxx/stack.hxx>

namespace namespace_
{
  class lang_pimpl: public lang_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    _characters (const ::xsde::cxx::ro_string&);

    virtual ::namespace_::lang
    post_lang ();

    public:
    struct lang_pimpl_state
    {
      ::std::string str_;
    };

    lang_pimpl_state lang_pimpl_state_;
  };

  class space_pimpl: public space_pskel
  {
    public:
    space_pimpl ();

    virtual void
    pre ();

    virtual void
    _characters (const ::xsde::cxx::ro_string&);

    virtual void
    _post ();

    virtual ::namespace_::space
    post_space ();

    public:
    struct space_pimpl_state
    {
      ::std::string str_;
    };

    space_pimpl_state space_pimpl_state_;
  };

  class lang_member_pimpl: public lang_member_pskel
  {
    public:
    lang_member_pimpl ();

    virtual void
    pre ();

    virtual void
    _characters (const ::xsde::cxx::ro_string&);

    virtual void
    _post ();

    virtual ::namespace_::lang_member
    post_lang_member ();

    public:
    struct lang_member_pimpl_state
    {
      ::std::string str_;
    };

    lang_member_pimpl_state lang_member_pimpl_state_;
  };
}

#ifdef XML_PIMPL_HXX_CLEAR_OMIT_PAGGR
#  undef XSDE_OMIT_PAGGR
#endif

#ifndef XSDE_OMIT_PAGGR

#endif // XSDE_OMIT_PAGGR

// Begin epilogue.
//
//
// End epilogue.

#include <xsde/cxx/post.hxx>

#endif // XML_PIMPL_HXX
